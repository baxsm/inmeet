generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  username      String?   @unique

  grantId    String?
  grantEmail String?

  password String?

  accounts Account[]
  sessions Session[]

  availabilities Availability[]
  eventTypes     EventType[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

enum Day {
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
  Sunday
}

model Availability {
  id String @id @default(uuid())

  day Day

  fromTime String
  toTime   String

  isActive Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User   User?   @relation(fields: [userId], references: [id])
  userId String?
}

enum VideoCallSoftware {
  ZoomMeeting    @map("Zoom Meeting")
  GoogleMeet     @map("Google Meet")
  MicrosoftTeams @map("Microsoft Teams")
}

model EventType {
  id String @id @default(uuid())

  title             String
  description       String
  duration          Int
  url               String
  isActive          Boolean           @default(true)
  videoCallSoftware VideoCallSoftware @default(GoogleMeet)

  createdAt DateTime @default(now())

  User   User?   @relation(fields: [userId], references: [id])
  userId String?
}
